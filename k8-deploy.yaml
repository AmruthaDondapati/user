# Creates a deployment set 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
  labels:
    app: user
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user 
  template:
    metadata:
      labels:
        app: user
    spec:
      containers:
      - name: user
        image: 355449129696.dkr.ecr.us-east-1.amazonaws.com/user:4.0.4
        ports:
        - containerPort: 8080
        envFrom: 
          - configMapRef: 
              name: user-configmap
--- 

apiVersion: v1
kind: Service
metadata:
  name: user-svc
spec:
  # type: LoadBalancer
  selector:
    app: user
  ports:
    - protocol: TCP
      port: 8080              # Port number of the service that it has to listen on 
      targetPort: 8080        # Port number of the container that it has to forward to

--- 
apiVersion: v1
kind: ConfigMap
metadata:
  name: catalogue-configmap 
data:
    MONGO_URL: "mongodb://admin1:roboshop1@roboshop-dev-docdb.cluster-c93whrwsdihk.us-east-1.docdb.amazonaws.com:27017/users?tls=true&replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false"


---
# Ingress Resource

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-myservicea
spec:
   rules:
     - http:
        paths:
        - path: "/"
          pathType: Prefix
          backend:
            service:
              name: user-svc
              port:
                number: 8080
   ingressClassName: nginx

--- 
# --- 
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ingress-myservicea
# spec:
#   rules:
#   - host: catalogue.robos-shop.online
#     http:
#       paths:
#       - path: "/"
#         pathType: Prefix
#         backend:
#           service:
#             name: catalogue-svc
#             port:
#               number: 8080
#   ingressClassName: nginx 